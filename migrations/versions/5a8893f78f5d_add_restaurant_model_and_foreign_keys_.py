"""Add Restaurant model and foreign keys for multi-tenant support

Revision ID: 5a8893f78f5d
Revises: c1126c923562
Create Date: 2025-08-07 15:24:16.830998

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '5a8893f78f5d'
down_revision = 'c1126c923562'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # Step 1: Create restaurant table
    op.create_table('restaurant',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('slug', sa.String(length=100), nullable=False),
    sa.Column('address', sa.Text(), nullable=False),
    sa.Column('contact', sa.String(length=20), nullable=False),
    sa.Column('primary_location', sa.String(length=100), nullable=False),
    sa.Column('logo', sa.String(length=200), nullable=True),
    sa.Column('brand_color', sa.String(length=7), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('slug')
    )
    
    # Step 2: Add nullable foreign key columns first
    op.add_column('category', sa.Column('restaurant_id', sa.Integer(), nullable=True))
    op.add_column('dish', sa.Column('restaurant_id', sa.Integer(), nullable=True))
    op.add_column('shivdhaba_order', sa.Column('restaurant_id', sa.Integer(), nullable=True))
    
    # Step 3: Create the default restaurant
    from sqlalchemy import text
    op.execute(text("""
        INSERT INTO restaurant (name, slug, address, contact, primary_location, is_active) 
        VALUES ('Shiv Dhaba', 'shiv-dhaba', '123 Main Street, Delhi', '9999999999', 'Delhi', true)
    """))
    
    # Step 4: Update existing records to reference the restaurant
    op.execute(text("UPDATE category SET restaurant_id = 1 WHERE restaurant_id IS NULL"))
    op.execute(text("UPDATE dish SET restaurant_id = 1 WHERE restaurant_id IS NULL"))
    op.execute(text("UPDATE shivdhaba_order SET restaurant_id = 1 WHERE restaurant_id IS NULL"))
    
    # Step 5: Make foreign key columns non-nullable
    op.alter_column('category', 'restaurant_id', nullable=False)
    op.alter_column('dish', 'restaurant_id', nullable=False)
    op.alter_column('shivdhaba_order', 'restaurant_id', nullable=False)
    
    # Step 6: Add foreign key constraints
    op.drop_index(op.f('name'), table_name='category')
    op.create_foreign_key(None, 'category', 'restaurant', ['restaurant_id'], ['id'])
    op.create_foreign_key(None, 'dish', 'restaurant', ['restaurant_id'], ['id'])
    op.create_foreign_key(None, 'shivdhaba_order', 'restaurant', ['restaurant_id'], ['id'])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'shivdhaba_order', type_='foreignkey')
    op.drop_column('shivdhaba_order', 'restaurant_id')
    op.drop_constraint(None, 'dish', type_='foreignkey')
    op.drop_column('dish', 'restaurant_id')
    op.drop_constraint(None, 'category', type_='foreignkey')
    op.create_index(op.f('name'), 'category', ['name'], unique=True)
    op.drop_column('category', 'restaurant_id')
    op.drop_table('restaurant')
    # ### end Alembic commands ###
